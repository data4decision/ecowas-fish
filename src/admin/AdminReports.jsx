import React, { useEffect, useState } from "react";
import { collection, onSnapshot } from "firebase/firestore";
import { db } from "../firebase/firebase";
import AdminLayout from "./AdminLayout";
import PreviewModal from "./PreviewModal";

export default function AdminReport({ user }) {
  const [reports, setReports] = useState([]);
  const [search, setSearch] = useState("");
  const [filterType, setFilterType] = useState(""); // e.g. PDF, CSV, PNG
  const [selectedReport, setSelectedReport] = useState(null);

  useEffect(() => {
    const unsub = onSnapshot(collection(db, "reports"), (snapshot) => {
      const data = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
      setReports(data);
    });
    return () => unsub();
  }, []);

  const isImage = (url) => /\.(jpg|jpeg|png|webp)$/i.test(url);

  const filteredReports = reports
    .filter((r) =>
      r?.exportType?.toLowerCase().includes(filterType.toLowerCase())
    )
    .filter((r) =>
      r?.title?.toLowerCase().includes(search.toLowerCase())
    );

  return (
    <AdminLayout user={user}>
      <h2 className="text-lg font-bold text-[#0b0b5c] mb-4">Report History</h2>

      <div className="flex flex-wrap justify-between items-center gap-4 mb-4">
        <select
          className="border px-3 py-2 rounded"
          value={filterType}
          onChange={(e) => setFilterType(e.target.value)}
        >
          <option value="">All Types</option>
          <option value="PDF">PDF</option>
          <option value="CSV">CSV</option>
          <option value="PNG">PNG</option>
        </select>

        <input
          type="text"
          placeholder="Search by title..."
          className="border px-3 py-2 rounded w-64"
          value={search}
          onChange={(e) => setSearch(e.target.value)}
        />
      </div>

      <div className="overflow-x-auto">
        <table className="min-w-full table-auto text-sm border">
          <thead className="bg-gray-100">
            <tr>
              <th className="px-3 py-2 border">Title</th>
              <th className="px-3 py-2 border">Country</th>
              <th className="px-3 py-2 border">Indicators</th>
              <th className="px-3 py-2 border">Years</th>
              <th className="px-3 py-2 border">Type</th>
              <th className="px-3 py-2 border">Generated By</th>
              <th className="px-3 py-2 border">Date</th>
              <th className="px-3 py-2 border">Actions</th>
            </tr>
          </thead>
          <tbody>
            {filteredReports.map((report) => (
              <tr key={report.id}>
                <td className="border px-3 py-1">{report.title}</td>
                <td className="border px-3 py-1">{report.country}</td>
                <td className="border px-3 py-1">
                  {Array.isArray(report.indicators)
                    ? report.indicators.join(", ")
                    : report.indicators}
                </td>
                <td className="border px-3 py-1">{report.years}</td>
                <td className="border px-3 py-1">{report.exportType}</td>
                <td className="border px-3 py-1">{report.generatedBy}</td>
                <td className="border px-3 py-1">
                  {report.createdAt
                    ? new Date(report.createdAt).toLocaleString()
                    : "N/A"}
                </td>
                <td className="border px-3 py-1 flex gap-2 flex-wrap">
                  {report.url ? (
                    <>
                      <a
                        href={report.url}
                        download
                        target="_blank"
                        rel="noopener noreferrer"
                        className="bg-blue-600 text-white px-2 py-1 rounded text-xs"
                      >
                        Download
                      </a>
                      <button
                        className="bg-gray-600 text-white px-2 py-1 rounded text-xs"
                        onClick={() => setSelectedReport(report)}
                      >
                        Preview
                      </button>
                    </>
                  ) : (
                    <span className="text-red-500 text-xs">No File</span>
                  )}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {selectedReport && (
        <PreviewModal file={selectedReport} onClose={() => setSelectedReport(null)} />
      )}
    </AdminLayout>
  );
}
